name: Deploy Documentation and Storybook to Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  packages: read

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Configure npm for GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "@lpkitvue:registry=https://npm.pkg.github.com" >> ~/.npmrc
          npm config list

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: |
          echo "Installing dependencies with TurboRepo..."
          npm install --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build packages
        run: |
          echo "Building packages..."
          npm run build:packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build Documentation (VitePress)
        run: |
          echo "Building VitePress documentation..."
          npm run docs:build
        env:
          NODE_ENV: production

      - name: Build Storybook
        run: |
          echo "Building Storybook..."
          npm run storybook:build
        env:
          NODE_ENV: production

      - name: Prepare deployment directory
        run: |
          echo "Preparing deployment structure..."
          mkdir -p deployment
          
          # Copy VitePress build to root
          cp -r apps/docs/.vitepress/dist/* deployment/
          
          # Copy Storybook build to storybook subdirectory
          mkdir -p deployment/storybook
          cp -r apps/storybook/storybook-static/* deployment/storybook/
          
          # Create index.html redirect if needed
          if [ ! -f deployment/index.html ]; then
            echo "Creating root index.html..."
            cat > deployment/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>LPKitVue - Redirecting...</title>
            <meta http-equiv="refresh" content="0; url=./docs/">
            <link rel="canonical" href="./docs/">
          </head>
          <body>
            <p>Redirecting to <a href="./docs/">documentation</a>...</p>
          </body>
          </html>
          EOF
          fi
          
          # List deployment structure for debugging
          echo "Deployment structure:"
          find deployment -type f -name "*.html" | head -20

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: deployment

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
